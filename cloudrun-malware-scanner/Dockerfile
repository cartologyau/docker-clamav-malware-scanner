# Copyright 2022 Google LLC

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Use node's container as a source for the NodeJS runtime.
FROM node:22.12.0-bookworm-slim AS node

# Base image is the ClamAV image.
FROM clamav/clamav-debian:1.4.1

# Define version of cvdupdate to use in a way that renovate can recognise
# and update it.
# renovate: datasource=pypi packageName=cvdupdate versioning=pep440
ARG CVDUPDATE_VERSION=1.1.2

# remove all existing virus definitions.
# we will download the update ones from the mirror
# and it is better to fail startup than to have outdated virus defs.
RUN rm /var/lib/clamav/*.cvd

# Update all debian packages.
#
# Install all dpkg dependencies:
#
# Combination of the packages required by NodeJS
#  (see https://github.com/nodejs/docker-node/blob/main/22/bookworm-slim/Dockerfile)
# gcloud cli
#   (https://cloud.google.com/sdk/docs/install#deb)
# The cvdupdater
#   (https://pypi.org/project/cvdupdate/)
# and by the malware scanner nodejs service
ENV PATH="$PATH:/opt/google-cloud-sdk/bin:/usr/local/bin:/root/.local/bin"
ENV DEBIAN_FRONTEND=noninteractive

RUN set -x \
    && apt-get update \
    && apt-get -y upgrade \
    && apt-get -qqy --no-install-recommends install \
      apt-transport-https \
      ca-certificates \
      curl \
      dirmngr \
      gawk \
      gettext-base \
      git \
      gnupg \
      jq \
      libatomic1 \
      lsb-release \
      make \
      openssh-client \
      pipx \
      python3-crcmod \
      python3-dev \
      python3-pip \
      wget \
      xz-utils \
    && pipx install "cvdupdate==${CVDUPDATE_VERSION}"

# Install node by copying binaries from nodejs container.
COPY --from=node /usr/local /usr/local

# Install cloud SDK
RUN set -x \
    && echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" \
      > /etc/apt/sources.list.d/google-cloud-sdk.list \
    && curl --silent https://packages.cloud.google.com/apt/doc/apt-key.gpg \
      | gpg --dearmor -o /usr/share/keyrings/cloud.google.gpg \
    && apt-get -qqy update \
    && apt-get -qqy --no-install-recommends install google-cloud-cli \
    && gcloud config set core/disable_usage_reporting true \
    && gcloud config set component_manager/disable_update_check true \
    && gcloud config set metrics/environment docker_image_latest

# Sanity check that required binaries are installed and runnable by checking versions
RUN set -x \
    && node --version \
    && npm --version \
    && clamd --version \
    && freshclam --version \
    && gcloud --version \
    && gsutil --version \
    && cvdupdate --help

# Copy the source code for the scanner service
WORKDIR /app
COPY .  /app

# Install NPM modules, build, then remove dev modules
RUN npm ci && npm run build && npm ci --omit=dev

CMD ["bash", "bootstrap.sh"]
